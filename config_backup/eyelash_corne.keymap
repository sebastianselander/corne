#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Eyelash corne key positions. Source missing
    // |------------------------|------------------------|
    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |
    // |                        |                        |
    // | 0  1  2  3  4  5       |      6  7  8  9  10 11 |
    // | 12 13 14 15 16 17      |      18 19 20 21 22 23 |
    // | 24 25 26 27 28 29      |      30 31 32 33 34 35 |
    // |          36 37 38      |      39 40 41          |
    // |------------------------|------------------------|

#define LEFT_HAND_KEYS    \
        0  1  2  3  4  5  \
        12 13 14 15 16 17 \
        24 25 26 27 28 29 \
                 36 37 38

#define RIGHT_HAND_KEYS   \
        6  7  8  9  10 11 \
        18 19 20 21 22 23 \
        30 31 32 33 34 35 \
        39 40 41

#define THUMB_KEYS 36 37 38 39 40 41

/ {
    macros {

        // Create Å character in a macro using Alt-gr
        ao_macro: ao_macro {
            label = "&AO_MACRO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>
                , <&kp RALT>
                , <&macro_tap>
                , <&kp A>
                , <&macro_release>
                , <&kp RALT>
                , <&macro_tap>
                , <&kp A>;
        };

        // Create Ä character in a macro using Alt-gr
        ae_macro: ae_macro {
            label = "&AE_MACRO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>
                , <&kp RALT>
                , <&macro_tap>
                , <&kp A>
                , <&macro_release>
                , <&kp RALT>
                , <&macro_press>
                , <&kp LSHFT>
                , <&macro_tap>
                , <&kp SQT>
                , <&macro_release>
                , <&kp LSHFT>;
        };

        // Create Ö character in a macro using Alt-gr
        oe_macro: oe_macro {
            label = "&OE_MACRO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>
                , <&kp RALT>
                , <&macro_tap>
                , <&kp O>
                , <&macro_release>
                , <&kp RALT>
                , <&macro_press>
                , <&kp LSHFT>
                , <&macro_tap>
                , <&kp SQT>
                , <&macro_release>
                , <&kp LSHFT>;
        };
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
      combos {
        compatible = "zmk,combos";
        combo_ao_combo {
            timeout-ms = <45>;
            key-positions = <25 9>;
            bindings = <&ao_macro>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        combo_ae_combo {
            timeout-ms = <45>;
            key-positions = <25 15>;
            bindings = <&ae_macro>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        combo_oe_combo {
            timeout-ms = <45>;
            key-positions = <15 9>;
            bindings = <&oe_macro>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };
      };
    };


behaviors {
    lt {
        flavor = "hold-preferred";
    };
    skq: sticky_key_quick {
        compatible = "zmk,behavior-sticky-key";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
        ignore-modifiers;
    };
    lsd: left_shift_dance {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&skq LSHIFT>, <&caps_word>;
    };
    rpi: require_prior_idle {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <250>;
        require-prior-idle-ms = <100>;
        bindings = <&kp>, <&kp>;
    };
    rpil: require_prior_idle_layer {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <250>;
        require-prior-idle-ms = <100>;
        bindings = <&mo>, <&kp>;
    };
    hrm_left_pinky: hrm_left_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <240>;
        quick-tap-ms = <250>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_left_ring: hrm_left_ring {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_left_middle: hrm_left_middle {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_left_index: hrm_left_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <180>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    hrm_right_pinky: hrm_right_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <240>;
        quick-tap-ms = <250>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_right_ring: hrm_right_ring {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_right_middle: hrm_right_middle {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    hrm_right_index: hrm_right_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        hold-trigger-on-release; // wait for other home row mods
        tapping-term-ms = <180>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    layer_hold_stickytap: layer_hold_stickytap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        bindings = <&mo>, <&skq>;
        flavor = "tap-preferred";
        quick-tap-ms = <175>;
    };
};

\ {
    keymap {
        compatible = "zmk,keymap";
        layer_base {
            display-name = "QWERTY";
            bindings = <
                &kp GRAVE   &kp Q                   &kp W                  &kp E                    &kp R                     &kp T         &kp Y &kp U                     &kp I                     &kp O                  &kp P                      &kp BSPC
                &ESC        &hrm_left_pinky LGUI A  &hrm_left_ring LALT S  &hrm_left_middle LCTRL D &hrm_left_pinky LSHIFT F  &kp G         &kp H &hrm_right_index RSHIFT J &hrm_right_middle RCTRL K &hrm_right_ring LALT L &hrm_right_pinky RGUI SEMI &kp SQT
                &skq LSHIFT &kp Z                   &kp X                  &kp C                    &kp V                     &kp B         &kp N &kp M                     &kp COMMA                 &kp DOT                &kp FSLH                   &kp ESC
                                                                           &kp LGUI                 &mo 1                     &lt 3 SPACE   &lt 3 ENTER                     &mo 2                     &kp RALT
            >;
        };
    };
};

